# Microsoft Windows Powershell Module manifest
#
# Module: Invoke-AsAdmin
# Generated on: 25/1/2020
# Generated by: MMillar
# https://github.com/mmillar-bolis
# http://www.bolis.com
#
# License:
# The MIT License (MIT, Expat)
#
# Copyright (c) 2014 msumimz
# Copyright (c) 2020, The Bolis Group
#

@{

# Script module or binary module file associated with this manifest.
RootModule = 'InvokeAsAdmin.psm1'

# Version number of this module.
ModuleVersion = '0.5.1.2'

# ID used to uniquely identify this module
GUID = 'd540a6db-930e-4b14-bd04-4ed21eeed8c3'

# Author of this module
Author = 'MMillar'

# Company or vendor of this module
CompanyName = 'The Bolis Group'

# Copyright statement for this module
Copyright = '2020'

# Description of the functionality provided by this module
Description = 'Provides cmdlet, process, and session elevation in PowerShell.'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '4.0'

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of Microsoft .NET Framework required by this module
# DotNetFrameworkVersion = ''

# Minimum version of the common language runtime (CLR) required by this module
# CLRVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
# RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module.
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Cmdlets are written in a compiled .NET language, while functions are written in the PowerShell scripting language.

# Functions to export from this module
FunctionsToExport = 'Invoke-AsAdmin'

# Cmdlets to export from this module
# CmdletsToExport = ''

# Variables to export from this module
# VariablesToExport = ''

# Aliases to export from this module
# AliasesToExport = ''

# DSC resources to export from this module
# DscResourcesToExport = @()

# List of all modules packaged with this module
ModuleList = @('InvokeAsAdmin')

# List of all files packaged with this module
FileList = @('InvokeAsAdmin.psd1', 'InvokeAsAdmin.psm1', 'LICENSE')

# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
PrivateData = @{

    PSData = @{

        # Tags applied to this module. These help with module discovery in online galleries.
        Tags = @('PSModule','Invoke-AsAdmin','Admin','Administration','Elevate','sudo','UAC')

        # A URL to the license for this module.
        LicenseUri = 'https://opensource.org/licenses/MIT'

        # A URL to the main website for this project.
        ProjectUri = 'https://github.com/mmillar-bolis/InvokeAsAdmin'

        # A URL to an icon representing this module.
        IconUri = 'https://upload.wikimedia.org/wikipedia/commons/2/2f/PowerShell_5.0_icon.png'

        # ReleaseNotes of this module
        # ReleaseNotes = 'Initial commit.'

    } # End of PSData hashtable

} # End of PrivateData hashtable

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}
